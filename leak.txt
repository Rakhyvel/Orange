==629219== Memcheck, a memory error detector
==629219== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==629219== Using Valgrind-3.25.1 and LibVEX; rerun with -h for copyright info
==629219== Command: ./zig-out/bin/orng-test integration /home/jshimel/Orng/tests/integration/generics/const_param_multiple_use.orng
==629219== Parent PID: 710
==629219== 
vex amd64->IR: unhandled instruction bytes: 0x62 0xF2 0x7D 0x8 0x7A 0xC6 0xC5 0xF9 0xD6 0x4
vex amd64->IR:   REX=0 REX.W=0 REX.R=0 REX.X=0 REX.B=0
vex amd64->IR:   VEX=0 VEX.L=0 VEX.nVVVV=0x0 ESC=NONE
vex amd64->IR:   PFX.66=0 PFX.F2=0 PFX.F3=0
==629219== valgrind: Unrecognised instruction at address 0x13994ba.
==629219==    at 0x13994BA: memset (memset.zig:21)
==629219==    by 0x1135242: os.linux.tls.prepareArea (tls.zig:462)
==629219==    by 0x11348A9: os.linux.tls.initStatic (tls.zig:521)
==629219==    by 0x112F15A: start.posixCallMainAndExit (start.zig:518)
==629219==    by 0x112EFCD: (below main) (start.zig:232)
==629219== Your program just tried to execute an instruction that Valgrind
==629219== did not recognise.  There are two possible reasons for this.
==629219== 1. Your program has a bug and erroneously jumped to a non-code
==629219==    location.  If you are running Memcheck and you just saw a
==629219==    warning about a bad jump, it's probably your program's fault.
==629219== 2. The instruction is legitimate but Valgrind doesn't handle it,
==629219==    i.e. it's Valgrind's fault.  If you think this is the case or
==629219==    you are not sure, please let us know and we'll try to fix it.
==629219== Either way, Valgrind will now raise a SIGILL signal which will
==629219== probably kill your program.
==629219== 
==629219== Process terminating with default action of signal 4 (SIGILL)
==629219==  Illegal opcode at address 0x13994BA
==629219==    at 0x13994BA: memset (memset.zig:21)
==629219==    by 0x1135242: os.linux.tls.prepareArea (tls.zig:462)
==629219==    by 0x11348A9: os.linux.tls.initStatic (tls.zig:521)
==629219==    by 0x112F15A: start.posixCallMainAndExit (start.zig:518)
==629219==    by 0x112EFCD: (below main) (start.zig:232)
==629219== 
==629219== HEAP SUMMARY:
==629219==     in use at exit: 0 bytes in 0 blocks
==629219==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==629219== 
==629219== All heap blocks were freed -- no leaks are possible
==629219== 
==629219== For lists of detected and suppressed errors, rerun with: -s
==629219== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
