digraph {
"src/ast/ast.zig" [style=filled, fillcolor="lightgreen"];
"src/hierarchy/module.zig" [style=filled, fillcolor="lightgreen"];
"src/hierarchy/core.zig" [style=filled, fillcolor="lightgreen"];
"src/hierarchy/prelude.zig" [style=filled, fillcolor="lightgreen"];
"src/symbol/scope.zig" [style=filled, fillcolor="lightgreen"];
"src/symbol/symbol.zig" [style=filled, fillcolor="lightgreen"];
"src/types/type.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/type_map.zig" [style=filled, fillcolor="lightgreen"];
"src/types/unification.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/cinclude.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/walker.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/decorate-access.zig" [style=filled, fillcolor="lightgreen"];
"src/hierarchy/compiler.zig" [style=filled, fillcolor="lightgreen"];
"src/util/errors.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/decorate.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/dependency_node.zig" [style=filled, fillcolor="lightgreen"];
"src/codegen/canonical_type_fmt.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/expand.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/import.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/poison.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/symbol-tree.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/type-set.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/type_decorate.zig" [style=filled, fillcolor="lightgreen"];
"src/ir/cfg.zig" [style=filled, fillcolor="lightgreen"];
"src/ir/basic-block.zig" [style=filled, fillcolor="lightgreen"];
"src/ir/instruction.zig" [style=filled, fillcolor="lightgreen"];
"src/ir/lval.zig" [style=filled, fillcolor="lightgreen"];
"src/ir/cfg_store.zig" [style=filled, fillcolor="lightgreen"];
"src/hierarchy/module_store.zig" [style=filled, fillcolor="lightgreen"];
"src/hierarchy/package.zig" [style=filled, fillcolor="lightgreen"];
"src/semantic/module_validate.zig" [style=filled, fillcolor="lightgreen"];
"src/semantic/scope_validate.zig" [style=filled, fillcolor="lightgreen"];
"src/semantic/symbol_validate.zig" [style=filled, fillcolor="lightgreen"];
"src/types/type_validate.zig" [style=filled, fillcolor="lightgreen"];
"src/semantic/pattern_validate.zig" [style=filled, fillcolor="lightgreen"];
"src/semantic/typecheck.zig" [style=filled, fillcolor="lightgreen"];
"src/lexer/split_lines.zig" [style=filled, fillcolor="lightgreen"];
"src/lexer/tokenize.zig" [style=filled, fillcolor="lightgreen"];
"src/parser/parse.zig" [style=filled, fillcolor="lightgreen"];
"src/interpretation/builtin.zig" [style=filled, fillcolor="lightgreen"];
"src/interpretation/interpreter.zig" [style=filled, fillcolor="lightgreen"];
"src/ir/symbol_version.zig" [style=filled, fillcolor="lightgreen"];
"src/ir/lower.zig" [style=filled, fillcolor="lightgreen"];
"src/semantic/cfg_validate.zig" [style=filled, fillcolor="lightgreen"];
"src/ir/optimizations.zig" [style=filled, fillcolor="lightgreen"];
"src/semantic/args.zig" [style=filled, fillcolor="lightgreen"];
"src/semantic/const_eval.zig" [style=filled, fillcolor="lightgreen"];
"src/semantic/defaults.zig" [style=filled, fillcolor="lightgreen"];
"src/semantic/typing.zig" [style=filled, fillcolor="lightgreen"];
"src/ast/ast.zig" -> "src/hierarchy/module.zig"
"src/ast/ast.zig" -> "src/hierarchy/core.zig"
"src/ast/ast.zig" -> "src/hierarchy/prelude.zig"
"src/ast/ast.zig" -> "src/symbol/scope.zig"
"src/ast/ast.zig" -> "src/symbol/symbol.zig"
"src/ast/ast.zig" -> "src/lexer/token.zig"
"src/ast/ast.zig" -> "src/types/type.zig"
"src/ast/ast.zig" -> "src/ast/type_map.zig"
"src/ast/ast.zig" -> "src/util/validation_state.zig"
"src/ast/ast.zig" -> "src/types/unification.zig"
"src/ast/ast.zig" -> "src/util/fmt.zig"
"src/hierarchy/module.zig" -> "src/ast/ast.zig"
"src/hierarchy/module.zig" -> "src/ir/cfg.zig"
"src/hierarchy/module.zig" -> "src/hierarchy/compiler.zig"
"src/hierarchy/module.zig" -> "src/ir/instruction.zig"
"src/hierarchy/module.zig" -> "src/hierarchy/module_hash.zig"
"src/hierarchy/module.zig" -> "src/ast/type-set.zig"
"src/hierarchy/module.zig" -> "src/util/uid_gen.zig"
"src/hierarchy/core.zig" -> "src/ast/ast.zig"
"src/hierarchy/core.zig" -> "src/hierarchy/compiler.zig"
"src/hierarchy/core.zig" -> "src/hierarchy/module.zig"
"src/hierarchy/core.zig" -> "src/hierarchy/prelude.zig"
"src/hierarchy/core.zig" -> "src/util/repo.zig"
"src/hierarchy/core.zig" -> "src/symbol/scope.zig"
"src/hierarchy/core.zig" -> "src/symbol/symbol.zig"
"src/hierarchy/core.zig" -> "src/lexer/token.zig"
"src/hierarchy/core.zig" -> "src/util/uid_gen.zig"
"src/hierarchy/core.zig" -> "src/types/type.zig"
"src/hierarchy/prelude.zig" -> "src/ast/ast.zig"
"src/hierarchy/prelude.zig" -> "src/hierarchy/compiler.zig"
"src/hierarchy/prelude.zig" -> "src/util/errors.zig"
"src/hierarchy/prelude.zig" -> "src/hierarchy/module.zig"
"src/hierarchy/prelude.zig" -> "src/symbol/scope.zig"
"src/hierarchy/prelude.zig" -> "src/zig-string/zig-string.zig"
"src/hierarchy/prelude.zig" -> "src/symbol/symbol.zig"
"src/hierarchy/prelude.zig" -> "src/lexer/token.zig"
"src/hierarchy/prelude.zig" -> "src/types/type.zig"
"src/hierarchy/prelude.zig" -> "src/util/uid_gen.zig"
"src/symbol/scope.zig" -> "src/ast/ast.zig"
"src/symbol/scope.zig" -> "src/hierarchy/compiler.zig"
"src/symbol/scope.zig" -> "src/ast/decorate.zig"
"src/symbol/scope.zig" -> "src/ast/decorate-access.zig"
"src/symbol/scope.zig" -> "src/util/errors.zig"
"src/symbol/scope.zig" -> "src/symbol/symbol.zig"
"src/symbol/scope.zig" -> "src/ast/symbol-tree.zig"
"src/symbol/scope.zig" -> "src/hierarchy/module.zig"
"src/symbol/scope.zig" -> "src/types/unification.zig"
"src/symbol/scope.zig" -> "src/util/uid_gen.zig"
"src/symbol/scope.zig" -> "src/ast/walker.zig"
"src/symbol/scope.zig" -> "src/types/type.zig"
"src/symbol/symbol.zig" -> "src/ast/ast.zig"
"src/symbol/symbol.zig" -> "src/ir/cfg.zig"
"src/symbol/symbol.zig" -> "src/util/errors.zig"
"src/symbol/symbol.zig" -> "src/symbol/scope.zig"
"src/symbol/symbol.zig" -> "src/util/span.zig"
"src/symbol/symbol.zig" -> "src/lexer/token.zig"
"src/symbol/symbol.zig" -> "src/types/type.zig"
"src/symbol/symbol.zig" -> "src/ast/type_map.zig"
"src/symbol/symbol.zig" -> "src/types/unification.zig"
"src/symbol/symbol.zig" -> "src/util/validation_state.zig"
"src/symbol/symbol.zig" -> "src/hierarchy/compiler.zig"
"src/symbol/symbol.zig" -> "src/ast/symbol-tree.zig"
"src/symbol/symbol.zig" -> "src/ast/decorate.zig"
"src/symbol/symbol.zig" -> "src/ast/decorate-access.zig"
"src/symbol/symbol.zig" -> "src/ast/walker.zig"
"src/types/type.zig" -> "src/util/alignment.zig"
"src/types/type.zig" -> "src/ast/ast.zig"
"src/types/type.zig" -> "src/hierarchy/prelude.zig"
"src/types/type.zig" -> "src/symbol/scope.zig"
"src/types/type.zig" -> "src/zig-string/zig-string.zig"
"src/types/type.zig" -> "src/symbol/symbol.zig"
"src/types/type.zig" -> "src/lexer/token.zig"
"src/types/type.zig" -> "src/types/unification.zig"
"src/ast/type_map.zig" -> "src/types/type.zig"
"src/types/unification.zig" -> "src/ast/ast.zig"
"src/types/unification.zig" -> "src/types/type.zig"
"src/ast/cinclude.zig" -> "src/ast/ast.zig"
"src/ast/cinclude.zig" -> "src/ast/walker.zig"
"src/ast/walker.zig" -> "src/ast/ast.zig"
"src/ast/walker.zig" -> "src/types/type.zig"
"src/ast/decorate-access.zig" -> "src/ast/ast.zig"
"src/ast/decorate-access.zig" -> "src/hierarchy/core.zig"
"src/ast/decorate-access.zig" -> "src/hierarchy/compiler.zig"
"src/ast/decorate-access.zig" -> "src/util/errors.zig"
"src/ast/decorate-access.zig" -> "src/symbol/scope.zig"
"src/ast/decorate-access.zig" -> "src/symbol/symbol.zig"
"src/ast/decorate-access.zig" -> "src/lexer/token.zig"
"src/ast/decorate-access.zig" -> "src/ast/walker.zig"
"src/ast/decorate-access.zig" -> "src/types/type.zig"
"src/hierarchy/compiler.zig" -> "src/ir/cfg.zig"
"src/hierarchy/compiler.zig" -> "src/ir/cfg_store.zig"
"src/hierarchy/compiler.zig" -> "src/hierarchy/core.zig"
"src/hierarchy/compiler.zig" -> "src/util/errors.zig"
"src/hierarchy/compiler.zig" -> "src/ir/interned_string_set.zig"
"src/hierarchy/compiler.zig" -> "src/hierarchy/module.zig"
"src/hierarchy/compiler.zig" -> "src/hierarchy/module_store.zig"
"src/hierarchy/compiler.zig" -> "src/util/dfs.zig"
"src/hierarchy/compiler.zig" -> "src/hierarchy/package.zig"
"src/hierarchy/compiler.zig" -> "src/ast/poison.zig"
"src/hierarchy/compiler.zig" -> "src/hierarchy/prelude.zig"
"src/hierarchy/compiler.zig" -> "src/symbol/symbol.zig"
"src/hierarchy/compiler.zig" -> "src/symbol/scope.zig"
"src/hierarchy/compiler.zig" -> "src/types/type.zig"
"src/hierarchy/compiler.zig" -> "src/semantic/module_validate.zig"
"src/hierarchy/compiler.zig" -> "src/semantic/scope_validate.zig"
"src/hierarchy/compiler.zig" -> "src/semantic/symbol_validate.zig"
"src/hierarchy/compiler.zig" -> "src/types/type_validate.zig"
"src/hierarchy/compiler.zig" -> "src/semantic/pattern_validate.zig"
"src/hierarchy/compiler.zig" -> "src/semantic/typecheck.zig"
"src/util/errors.zig" -> "src/ast/ast.zig"
"src/util/errors.zig" -> "src/util/span.zig"
"src/util/errors.zig" -> "src/symbol/symbol.zig"
"src/util/errors.zig" -> "src/util/term.zig"
"src/util/errors.zig" -> "src/lexer/token.zig"
"src/util/errors.zig" -> "src/types/type.zig"
"src/ast/decorate.zig" -> "src/ast/ast.zig"
"src/ast/decorate.zig" -> "src/util/errors.zig"
"src/ast/decorate.zig" -> "src/symbol/scope.zig"
"src/ast/decorate.zig" -> "src/types/type.zig"
"src/ast/decorate.zig" -> "src/ast/walker.zig"
"src/ast/dependency_node.zig" -> "src/types/type.zig"
"src/ast/dependency_node.zig" -> "src/codegen/canonical_type_fmt.zig"
"src/codegen/canonical_type_fmt.zig" -> "src/hierarchy/prelude.zig"
"src/codegen/canonical_type_fmt.zig" -> "src/zig-string/zig-string.zig"
"src/codegen/canonical_type_fmt.zig" -> "src/types/type.zig"
"src/codegen/canonical_type_fmt.zig" -> "src/ast/type_map.zig"
"src/ast/expand.zig" -> "src/ast/ast.zig"
"src/ast/expand.zig" -> "src/util/errors.zig"
"src/ast/expand.zig" -> "src/hierarchy/prelude.zig"
"src/ast/expand.zig" -> "src/lexer/token.zig"
"src/ast/expand.zig" -> "src/ast/walker.zig"
"src/ast/import.zig" -> "src/ast/ast.zig"
"src/ast/import.zig" -> "src/hierarchy/compiler.zig"
"src/ast/import.zig" -> "src/hierarchy/module.zig"
"src/ast/import.zig" -> "src/hierarchy/prelude.zig"
"src/ast/import.zig" -> "src/symbol/symbol.zig"
"src/ast/import.zig" -> "src/lexer/token.zig"
"src/ast/import.zig" -> "src/types/type.zig"
"src/ast/import.zig" -> "src/ast/walker.zig"
"src/ast/poison.zig" -> "src/ast/ast.zig"
"src/ast/poison.zig" -> "src/lexer/token.zig"
"src/ast/poison.zig" -> "src/types/type.zig"
"src/ast/symbol-tree.zig" -> "src/ast/ast.zig"
"src/ast/symbol-tree.zig" -> "src/util/errors.zig"
"src/ast/symbol-tree.zig" -> "src/hierarchy/prelude.zig"
"src/ast/symbol-tree.zig" -> "src/zig-string/zig-string.zig"
"src/ast/symbol-tree.zig" -> "src/symbol/scope.zig"
"src/ast/symbol-tree.zig" -> "src/symbol/symbol.zig"
"src/ast/symbol-tree.zig" -> "src/lexer/token.zig"
"src/ast/symbol-tree.zig" -> "src/types/type.zig"
"src/ast/symbol-tree.zig" -> "src/ast/walker.zig"
"src/ast/type-set.zig" -> "src/ast/dependency_node.zig"
"src/ast/type-set.zig" -> "src/types/type.zig"
"src/ast/type_decorate.zig" -> "src/util/errors.zig"
"src/ast/type_decorate.zig" -> "src/hierarchy/compiler.zig"
"src/ast/type_decorate.zig" -> "src/types/type.zig"
"src/ast/type_decorate.zig" -> "src/ast/walker.zig"
"src/ir/cfg.zig" -> "src/ast/ast.zig"
"src/ir/cfg.zig" -> "src/util/alignment.zig"
"src/ir/cfg.zig" -> "src/ir/basic-block.zig"
"src/ir/cfg.zig" -> "src/ir/instruction.zig"
"src/ir/cfg.zig" -> "src/ir/lval.zig"
"src/ir/cfg.zig" -> "src/util/span.zig"
"src/ir/cfg.zig" -> "src/symbol/symbol.zig"
"src/ir/cfg.zig" -> "src/ir/symbol_version.zig"
"src/ir/cfg.zig" -> "src/ast/type-set.zig"
"src/ir/basic-block.zig" -> "src/ir/instruction.zig"
"src/ir/basic-block.zig" -> "src/ir/lval.zig"
"src/ir/basic-block.zig" -> "src/util/span.zig"
"src/ir/basic-block.zig" -> "src/symbol/symbol.zig"
"src/ir/basic-block.zig" -> "src/ast/type-set.zig"
"src/ir/instruction.zig" -> "src/ast/ast.zig"
"src/ir/instruction.zig" -> "src/ir/basic-block.zig"
"src/ir/instruction.zig" -> "src/util/errors.zig"
"src/ir/instruction.zig" -> "src/ir/lval.zig"
"src/ir/instruction.zig" -> "src/hierarchy/prelude.zig"
"src/ir/instruction.zig" -> "src/util/span.zig"
"src/ir/instruction.zig" -> "src/ir/interned_string_set.zig"
"src/ir/instruction.zig" -> "src/symbol/symbol.zig"
"src/ir/instruction.zig" -> "src/types/type.zig"
"src/ir/lval.zig" -> "src/ir/instruction.zig"
"src/ir/lval.zig" -> "src/symbol/symbol.zig"
"src/ir/lval.zig" -> "src/zig-string/zig-string.zig"
"src/ir/lval.zig" -> "src/ir/symbol_version.zig"
"src/ir/lval.zig" -> "src/types/type.zig"
"src/ir/cfg_store.zig" -> "src/symbol/symbol.zig"
"src/ir/cfg_store.zig" -> "src/hierarchy/compiler.zig"
"src/ir/cfg_store.zig" -> "src/ir/cfg.zig"
"src/ir/cfg_store.zig" -> "src/util/errors.zig"
"src/ir/cfg_store.zig" -> "src/ir/interned_string_set.zig"
"src/ir/cfg_store.zig" -> "src/ir/lower.zig"
"src/ir/cfg_store.zig" -> "src/semantic/cfg_validate.zig"
"src/ir/cfg_store.zig" -> "src/ir/optimizations.zig"
"src/hierarchy/module_store.zig" -> "src/ast/ast.zig"
"src/hierarchy/module_store.zig" -> "src/ir/cfg.zig"
"src/hierarchy/module_store.zig" -> "src/util/dfs.zig"
"src/hierarchy/module_store.zig" -> "src/hierarchy/compiler.zig"
"src/hierarchy/module_store.zig" -> "src/util/errors.zig"
"src/hierarchy/module_store.zig" -> "src/ir/interned_string_set.zig"
"src/hierarchy/module_store.zig" -> "src/hierarchy/module.zig"
"src/hierarchy/module_store.zig" -> "src/symbol/scope.zig"
"src/hierarchy/module_store.zig" -> "src/util/span.zig"
"src/hierarchy/module_store.zig" -> "src/symbol/symbol.zig"
"src/hierarchy/module_store.zig" -> "src/lexer/token.zig"
"src/hierarchy/module_store.zig" -> "src/lexer/read_file.zig"
"src/hierarchy/module_store.zig" -> "src/util/pipeline.zig"
"src/hierarchy/module_store.zig" -> "src/lexer/hash.zig"
"src/hierarchy/module_store.zig" -> "src/lexer/split_lines.zig"
"src/hierarchy/module_store.zig" -> "src/lexer/tokenize.zig"
"src/hierarchy/module_store.zig" -> "src/lexer/apply_layout.zig"
"src/hierarchy/module_store.zig" -> "src/parser/parse.zig"
"src/hierarchy/module_store.zig" -> "src/ast/walker.zig"
"src/hierarchy/module_store.zig" -> "src/ast/expand.zig"
"src/hierarchy/module_store.zig" -> "src/ast/import.zig"
"src/hierarchy/module_store.zig" -> "src/ast/cinclude.zig"
"src/hierarchy/module_store.zig" -> "src/ast/symbol-tree.zig"
"src/hierarchy/module_store.zig" -> "src/ast/decorate.zig"
"src/hierarchy/module_store.zig" -> "src/ast/decorate-access.zig"
"src/hierarchy/module_store.zig" -> "src/ast/type_decorate.zig"
"src/hierarchy/package.zig" -> "src/hierarchy/module.zig"
"src/hierarchy/package.zig" -> "src/ir/cfg.zig"
"src/hierarchy/package.zig" -> "src/hierarchy/compiler.zig"
"src/hierarchy/package.zig" -> "src/symbol/symbol.zig"
"src/hierarchy/package.zig" -> "src/hierarchy/module_hash.zig"
"src/hierarchy/package.zig" -> "src/ast/type-set.zig"
"src/semantic/module_validate.zig" -> "src/hierarchy/compiler.zig"
"src/semantic/module_validate.zig" -> "src/util/errors.zig"
"src/semantic/module_validate.zig" -> "src/hierarchy/module.zig"
"src/semantic/module_validate.zig" -> "src/hierarchy/prelude.zig"
"src/semantic/module_validate.zig" -> "src/util/span.zig"
"src/semantic/scope_validate.zig" -> "src/ast/ast.zig"
"src/semantic/scope_validate.zig" -> "src/hierarchy/compiler.zig"
"src/semantic/scope_validate.zig" -> "src/util/errors.zig"
"src/semantic/scope_validate.zig" -> "src/symbol/scope.zig"
"src/semantic/scope_validate.zig" -> "src/symbol/symbol.zig"
"src/semantic/scope_validate.zig" -> "src/types/type.zig"
"src/semantic/symbol_validate.zig" -> "src/ast/ast.zig"
"src/semantic/symbol_validate.zig" -> "src/hierarchy/compiler.zig"
"src/semantic/symbol_validate.zig" -> "src/semantic/const_eval.zig"
"src/semantic/symbol_validate.zig" -> "src/semantic/typecheck.zig"
"src/semantic/symbol_validate.zig" -> "src/util/errors.zig"
"src/semantic/symbol_validate.zig" -> "src/hierarchy/prelude.zig"
"src/semantic/symbol_validate.zig" -> "src/zig-string/zig-string.zig"
"src/semantic/symbol_validate.zig" -> "src/symbol/symbol.zig"
"src/semantic/symbol_validate.zig" -> "src/lexer/token.zig"
"src/semantic/symbol_validate.zig" -> "src/types/type.zig"
"src/semantic/symbol_validate.zig" -> "src/ast/walker.zig"
"src/types/type_validate.zig" -> "src/semantic/const_eval.zig"
"src/types/type_validate.zig" -> "src/ast/type_decorate.zig"
"src/types/type_validate.zig" -> "src/hierarchy/compiler.zig"
"src/types/type_validate.zig" -> "src/util/errors.zig"
"src/types/type_validate.zig" -> "src/types/type.zig"
"src/types/type_validate.zig" -> "src/symbol/symbol.zig"
"src/types/type_validate.zig" -> "src/hierarchy/prelude.zig"
"src/types/type_validate.zig" -> "src/ast/walker.zig"
"src/semantic/pattern_validate.zig" -> "src/ast/ast.zig"
"src/semantic/pattern_validate.zig" -> "src/hierarchy/compiler.zig"
"src/semantic/pattern_validate.zig" -> "src/util/errors.zig"
"src/semantic/pattern_validate.zig" -> "src/util/span.zig"
"src/semantic/pattern_validate.zig" -> "src/semantic/typing.zig"
"src/semantic/pattern_validate.zig" -> "src/types/type.zig"
"src/semantic/typecheck.zig" -> "src/ast/ast.zig"
"src/semantic/typecheck.zig" -> "src/semantic/args.zig"
"src/semantic/typecheck.zig" -> "src/semantic/const_eval.zig"
"src/semantic/typecheck.zig" -> "src/hierarchy/compiler.zig"
"src/semantic/typecheck.zig" -> "src/semantic/defaults.zig"
"src/semantic/typecheck.zig" -> "src/util/errors.zig"
"src/semantic/typecheck.zig" -> "src/ast/poison.zig"
"src/semantic/typecheck.zig" -> "src/hierarchy/prelude.zig"
"src/semantic/typecheck.zig" -> "src/semantic/typing.zig"
"src/semantic/typecheck.zig" -> "src/types/type.zig"
"src/semantic/typecheck.zig" -> "src/ast/walker.zig"
"src/lexer/split_lines.zig" -> "src/util/errors.zig"
"src/lexer/split_lines.zig" -> "src/util/span.zig"
"src/lexer/tokenize.zig" -> "src/lexer/token.zig"
"src/lexer/tokenize.zig" -> "src/util/errors.zig"
"src/lexer/tokenize.zig" -> "src/util/span.zig"
"src/parser/parse.zig" -> "src/ast/ast.zig"
"src/parser/parse.zig" -> "src/util/errors.zig"
"src/parser/parse.zig" -> "src/symbol/symbol.zig"
"src/parser/parse.zig" -> "src/lexer/token.zig"
"src/parser/parse.zig" -> "src/types/type.zig"
"src/interpretation/builtin.zig" -> "src/ast/ast.zig"
"src/interpretation/builtin.zig" -> "src/hierarchy/compiler.zig"
"src/interpretation/builtin.zig" -> "src/hierarchy/core.zig"
"src/interpretation/builtin.zig" -> "src/interpretation/interpreter.zig"
"src/interpretation/builtin.zig" -> "src/ir/lval.zig"
"src/interpretation/builtin.zig" -> "src/util/repo.zig"
"src/interpretation/builtin.zig" -> "src/zig-string/zig-string.zig"
"src/interpretation/interpreter.zig" -> "src/ast/ast.zig"
"src/interpretation/interpreter.zig" -> "src/interpretation/builtin.zig"
"src/interpretation/interpreter.zig" -> "src/hierarchy/core.zig"
"src/interpretation/interpreter.zig" -> "src/ir/cfg.zig"
"src/interpretation/interpreter.zig" -> "src/hierarchy/compiler.zig"
"src/interpretation/interpreter.zig" -> "src/util/errors.zig"
"src/interpretation/interpreter.zig" -> "src/ir/instruction.zig"
"src/interpretation/interpreter.zig" -> "src/ir/interned_string_set.zig"
"src/interpretation/interpreter.zig" -> "src/ir/lval.zig"
"src/interpretation/interpreter.zig" -> "src/interpretation/memory.zig"
"src/interpretation/interpreter.zig" -> "src/hierarchy/module.zig"
"src/interpretation/interpreter.zig" -> "src/hierarchy/prelude.zig"
"src/interpretation/interpreter.zig" -> "src/util/alignment.zig"
"src/interpretation/interpreter.zig" -> "src/lexer/token.zig"
"src/interpretation/interpreter.zig" -> "src/types/type.zig"
"src/interpretation/interpreter.zig" -> "src/util/span.zig"
"src/interpretation/interpreter.zig" -> "src/symbol/symbol.zig"
"src/ir/symbol_version.zig" -> "src/symbol/symbol.zig"
"src/ir/symbol_version.zig" -> "src/ir/instruction.zig"
"src/ir/symbol_version.zig" -> "src/types/type.zig"
"src/ir/lower.zig" -> "src/ast/ast.zig"
"src/ir/lower.zig" -> "src/ir/cfg.zig"
"src/ir/lower.zig" -> "src/hierarchy/compiler.zig"
"src/ir/lower.zig" -> "src/util/errors.zig"
"src/ir/lower.zig" -> "src/ir/interned_string_set.zig"
"src/ir/lower.zig" -> "src/ir/instruction.zig"
"src/ir/lower.zig" -> "src/ir/lval.zig"
"src/ir/lower.zig" -> "src/hierarchy/prelude.zig"
"src/ir/lower.zig" -> "src/util/span.zig"
"src/ir/lower.zig" -> "src/symbol/symbol.zig"
"src/ir/lower.zig" -> "src/ir/symbol_version.zig"
"src/ir/lower.zig" -> "src/lexer/token.zig"
"src/ir/lower.zig" -> "src/types/type.zig"
"src/semantic/cfg_validate.zig" -> "src/ir/cfg.zig"
"src/semantic/cfg_validate.zig" -> "src/util/errors.zig"
"src/semantic/cfg_validate.zig" -> "src/ir/instruction.zig"
"src/semantic/cfg_validate.zig" -> "src/ir/lval.zig"
"src/semantic/cfg_validate.zig" -> "src/util/span.zig"
"src/semantic/cfg_validate.zig" -> "src/symbol/symbol.zig"
"src/ir/optimizations.zig" -> "src/ir/basic-block.zig"
"src/ir/optimizations.zig" -> "src/ir/cfg.zig"
"src/ir/optimizations.zig" -> "src/util/errors.zig"
"src/ir/optimizations.zig" -> "src/ir/instruction.zig"
"src/ir/optimizations.zig" -> "src/ir/symbol_version.zig"
"src/semantic/args.zig" -> "src/ast/ast.zig"
"src/semantic/args.zig" -> "src/util/errors.zig"
"src/semantic/args.zig" -> "src/util/span.zig"
"src/semantic/args.zig" -> "src/types/type.zig"
"src/semantic/const_eval.zig" -> "src/ast/ast.zig"
"src/semantic/const_eval.zig" -> "src/hierarchy/compiler.zig"
"src/semantic/const_eval.zig" -> "src/interpretation/interpreter.zig"
"src/semantic/const_eval.zig" -> "src/semantic/defaults.zig"
"src/semantic/const_eval.zig" -> "src/symbol/scope.zig"
"src/semantic/const_eval.zig" -> "src/symbol/symbol.zig"
"src/semantic/const_eval.zig" -> "src/types/type.zig"
"src/semantic/const_eval.zig" -> "src/ast/symbol-tree.zig"
"src/semantic/const_eval.zig" -> "src/ast/walker.zig"
"src/semantic/defaults.zig" -> "src/ast/ast.zig"
"src/semantic/defaults.zig" -> "src/util/errors.zig"
"src/semantic/defaults.zig" -> "src/hierarchy/prelude.zig"
"src/semantic/defaults.zig" -> "src/util/span.zig"
"src/semantic/defaults.zig" -> "src/types/type.zig"
"src/semantic/typing.zig" -> "src/ast/ast.zig"
"src/semantic/typing.zig" -> "src/semantic/args.zig"
"src/semantic/typing.zig" -> "src/util/errors.zig"
"src/semantic/typing.zig" -> "src/hierarchy/prelude.zig"
"src/semantic/typing.zig" -> "src/util/span.zig"
"src/semantic/typing.zig" -> "src/types/type.zig"
}
