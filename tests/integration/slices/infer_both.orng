// 111
fn main() -> Int {
    let mut x: [3]Int = (100, 10, 1)
    let y = [mut]x
    let z: [mut]Int = y[..]
    sum_up(z)
}

fn sum_up(xs: []Int)->Int {
    let mut sum: Int = 0
    while let mut i: Int = 0; i < xs.length; i += 1 {
        sum += xs[i]
    }
    sum
}