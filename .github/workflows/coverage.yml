name: Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout main
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Checkout zig-string
      uses: actions/checkout@v4
      with:
        repository: 'JakubSzark/zig-string'
        ref: 'f6f9e5dc7c5c45a72473de245a0e6958ef2bf913'
        path: src/zig-string
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Set up Zig
      uses: korandoru/setup-zig@v1
      with:
        zig-version: 0.15.1
    
    - name: Get Modified Files
      id: modified_files
      run: |
        BASE_BRANCH=${{ github.event.pull_request.base.ref }}
        TEST_FILES=$(git diff --name-only --diff-filter=AM origin/$BASE_BRANCH...HEAD | grep '^test/' | tr '\n' ' ' || echo "")
        SRC_FILES=$(git diff --name-only --diff-filter=AM origin/$BASE_BRANCH...HEAD | grep '^src/' | tr '\n' ' ' || echo "")
        echo "test_files=$TEST_FILES" >> $GITHUB_ENV
        echo "src_files=$SRC_FILES" >> $GITHUB_ENV

    - name: Build kcov
      run: |
        sudo apt update
        sudo apt install libcurl4-openssl-dev
        sudo apt install libelf-dev
        sudo apt install libdw-dev
        git clone https://github.com/SimonKagstrom/kcov.git
        cd kcov
        mkdir build && cd build
        cmake ..
        make -j$(nproc)
        sudo make install
        kcov --version
    
    - name: Build project (Linux)
      run: |
        export ORNG_STD_PATH="$GITHUB_WORKSPACE/std"
        export ORNG_BUILTIN_PATH="$GITHUB_WORKSPACE/src/hierarchy/builtin.orng"
        python tests/test.py all
        zig build orng
        cd examples
        kcov --include-path "$GITHUB_WORKSPACE/src" "$GITHUB_WORKSPACE/kcov-out" ../zig-out/bin/orng build
        kcov --include-path "$GITHUB_WORKSPACE/src" "$GITHUB_WORKSPACE/kcov-out" ../zig-out/bin/orng clean
        kcov --include-path "$GITHUB_WORKSPACE/src" "$GITHUB_WORKSPACE/kcov-out" ../zig-out/bin/orng test
        cd ..

    - name: Ensure Modified Lines in src/ Are Covered
      run: python tests/coverage-check.py -s $src_files -b origin/${{ github.event.pull_request.base.ref }}

    # Upload artifacts if build fails
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs
        path: zig-cache/log
