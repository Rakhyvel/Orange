var data = {lines:[
{"lineNum":"    1","line":"//! Representation of a float as the signficant digits and exponent."},
{"lineNum":"    2","line":"//! The fast path algorithm using machine-sized integers and floats."},
{"lineNum":"    3","line":"//!"},
{"lineNum":"    4","line":"//! This only works if both the mantissa and the exponent can be exactly"},
{"lineNum":"    5","line":"//! represented as a machine float, since IEE-754 guarantees no rounding"},
{"lineNum":"    6","line":"//! will occur."},
{"lineNum":"    7","line":"//!"},
{"lineNum":"    8","line":"//! There is an exception: disguised fast-path cases, where we can shift"},
{"lineNum":"    9","line":"//! powers-of-10 from the exponent to the significant digits."},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"const std = @import(\"std\");"},
{"lineNum":"   12","line":"const math = std.math;"},
{"lineNum":"   13","line":"const common = @import(\"common.zig\");"},
{"lineNum":"   14","line":"const FloatInfo = @import(\"FloatInfo.zig\");"},
{"lineNum":"   15","line":"const Number = common.Number;"},
{"lineNum":"   16","line":"const floatFromU64 = common.floatFromU64;"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"fn isFastPath(comptime T: type, n: Number(T)) bool {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   19","line":"    const info = FloatInfo.from(T);"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"    return info.min_exponent_fast_path <= n.exponent and","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   22","line":"        n.exponent <= info.max_exponent_fast_path_disguised and","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   23","line":"        n.mantissa <= info.max_mantissa_fast_path and","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   24","line":"        !n.many_digits;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   25","line":"}"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"// upper bound for tables is floor(mantissaDigits(T) / log2(5))"},
{"lineNum":"   28","line":"// for f64 this is floor(53 / log2(5)) = 22."},
{"lineNum":"   29","line":"//"},
{"lineNum":"   30","line":"// Must have max_disguised_fast_path - max_exponent_fast_path entries. (82 - 48 = 34 for f128)"},
{"lineNum":"   31","line":"fn fastPow10(comptime T: type, i: usize) T {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   32","line":"    return switch (T) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   33","line":"        f16 => ([8]f16{"},
{"lineNum":"   34","line":"            1e0, 1e1, 1e2, 1e3, 1e4, 0, 0, 0,"},
{"lineNum":"   35","line":"        })[i & 7],"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"        f32 => ([16]f32{"},
{"lineNum":"   38","line":"            1e0, 1e1, 1e2,  1e3, 1e4, 1e5, 1e6, 1e7,"},
{"lineNum":"   39","line":"            1e8, 1e9, 1e10, 0,   0,   0,   0,   0,"},
{"lineNum":"   40","line":"        })[i & 15],"},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"        f64 => ([32]f64{"},
{"lineNum":"   43","line":"            1e0,  1e1,  1e2,  1e3,  1e4,  1e5,  1e6,  1e7,"},
{"lineNum":"   44","line":"            1e8,  1e9,  1e10, 1e11, 1e12, 1e13, 1e14, 1e15,"},
{"lineNum":"   45","line":"            1e16, 1e17, 1e18, 1e19, 1e20, 1e21, 1e22, 0,"},
{"lineNum":"   46","line":"            0,    0,    0,    0,    0,    0,    0,    0,"},
{"lineNum":"   47","line":"        })[i & 31],","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"        f128 => ([64]f128{"},
{"lineNum":"   50","line":"            1e0,  1e1,  1e2,  1e3,  1e4,  1e5,  1e6,  1e7,"},
{"lineNum":"   51","line":"            1e8,  1e9,  1e10, 1e11, 1e12, 1e13, 1e14, 1e15,"},
{"lineNum":"   52","line":"            1e16, 1e17, 1e18, 1e19, 1e20, 1e21, 1e22, 1e23,"},
{"lineNum":"   53","line":"            1e24, 1e25, 1e26, 1e27, 1e28, 1e29, 1e30, 1e31,"},
{"lineNum":"   54","line":"            1e32, 1e33, 1e34, 1e35, 1e36, 1e37, 1e38, 1e39,"},
{"lineNum":"   55","line":"            1e40, 1e41, 1e42, 1e43, 1e44, 1e45, 1e46, 1e47,"},
{"lineNum":"   56","line":"            1e48, 0,    0,    0,    0,    0,    0,    0,"},
{"lineNum":"   57","line":"            0,    0,    0,    0,    0,    0,    0,    0,"},
{"lineNum":"   58","line":"        })[i & 63],"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"        else => unreachable,"},
{"lineNum":"   61","line":"    };"},
{"lineNum":"   62","line":"}"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"fn fastIntPow10(comptime T: type, i: usize) T {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   65","line":"    return switch (T) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   66","line":"        u64 => ([16]u64{"},
{"lineNum":"   67","line":"            1,             10,             100,             1000,"},
{"lineNum":"   68","line":"            10000,         100000,         1000000,         10000000,"},
{"lineNum":"   69","line":"            100000000,     1000000000,     10000000000,     100000000000,"},
{"lineNum":"   70","line":"            1000000000000, 10000000000000, 100000000000000, 1000000000000000,"},
{"lineNum":"   71","line":"        })[i],","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"        u128 => ([35]u128{"},
{"lineNum":"   74","line":"            1,                                   10,"},
{"lineNum":"   75","line":"            100,                                 1000,"},
{"lineNum":"   76","line":"            10000,                               100000,"},
{"lineNum":"   77","line":"            1000000,                             10000000,"},
{"lineNum":"   78","line":"            100000000,                           1000000000,"},
{"lineNum":"   79","line":"            10000000000,                         100000000000,"},
{"lineNum":"   80","line":"            1000000000000,                       10000000000000,"},
{"lineNum":"   81","line":"            100000000000000,                     1000000000000000,"},
{"lineNum":"   82","line":"            10000000000000000,                   100000000000000000,"},
{"lineNum":"   83","line":"            1000000000000000000,                 10000000000000000000,"},
{"lineNum":"   84","line":"            100000000000000000000,               1000000000000000000000,"},
{"lineNum":"   85","line":"            10000000000000000000000,             100000000000000000000000,"},
{"lineNum":"   86","line":"            1000000000000000000000000,           10000000000000000000000000,"},
{"lineNum":"   87","line":"            100000000000000000000000000,         1000000000000000000000000000,"},
{"lineNum":"   88","line":"            10000000000000000000000000000,       100000000000000000000000000000,"},
{"lineNum":"   89","line":"            1000000000000000000000000000000,     10000000000000000000000000000000,"},
{"lineNum":"   90","line":"            100000000000000000000000000000000,   1000000000000000000000000000000000,"},
{"lineNum":"   91","line":"            10000000000000000000000000000000000,"},
{"lineNum":"   92","line":"        })[i],"},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"        else => unreachable,"},
{"lineNum":"   95","line":"    };"},
{"lineNum":"   96","line":"}"},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":"pub fn convertFast(comptime T: type, n: Number(T)) ?T {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   99","line":"    const MantissaT = common.mantissaType(T);"},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":"    if (!isFastPath(T, n)) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  102","line":"        return null;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  103","line":"    }"},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"    // TODO: x86 (no SSE/SSE2) requires x87 FPU to be setup correctly with fldcw"},
{"lineNum":"  106","line":"    const info = FloatInfo.from(T);"},
{"lineNum":"  107","line":""},
{"lineNum":"  108","line":"    var value: T = 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  109","line":"    if (n.exponent <= info.max_exponent_fast_path) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  110","line":"        // normal fast path"},
{"lineNum":"  111","line":"        value = @intToFloat(T, n.mantissa);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  112","line":"        value = if (n.exponent < 0)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  113","line":"            value / fastPow10(T, @intCast(usize, -n.exponent))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  114","line":"        else"},
{"lineNum":"  115","line":"            value * fastPow10(T, @intCast(usize, n.exponent));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  116","line":"    } else {"},
{"lineNum":"  117","line":"        // disguised fast path"},
{"lineNum":"  118","line":"        const shift = n.exponent - info.max_exponent_fast_path;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  119","line":"        const mantissa = math.mul(MantissaT, n.mantissa, fastIntPow10(MantissaT, @intCast(usize, shift))) catch return null;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  120","line":"        if (mantissa > info.max_mantissa_fast_path) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  121","line":"            return null;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  122","line":"        }"},
{"lineNum":"  123","line":"        value = @intToFloat(T, mantissa) * fastPow10(T, info.max_exponent_fast_path);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  124","line":"    }"},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"    if (n.negative) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  127","line":"        value = -value;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  128","line":"    }"},
{"lineNum":"  129","line":"    return value;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  130","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test", "date" : "2023-04-18 20:41:50", "instrumented" : 28, "covered" : 0,};
var merged_data = [];
