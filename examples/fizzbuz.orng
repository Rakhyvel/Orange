fn main: (sys: System)->!() =
    while let i = 0; i < 100; i += 1
        match fizzbuzz(i)
        | .string(s')  => try sys.stdout.>println("{s}", s')
        | .integer(j') => try sys.stdout.>println("{}", j')

// Define an Algebraic Data Type (ADT), similar to tagged unions
const FizzBuzzResult 
    = string: String
    | integer: Int

fn fizzbuzz: (n: Int)->FizzBuzzResult =
    case
    | n % 15 == 0 => .string("fizzbuzz") 
    | n % 5 == 0  => .string("buzz") 
    | n % 3 == 0  => .string("fizz")
    | else        => .integer(n)