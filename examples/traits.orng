trait Drawable {
    fn draw(&self)
}

const Circle = (radius: Float,)
const Rectangle = (width: Float, height: Float)

impl Drawable for Circle {
    fn draw(&self) {
        debug::println("Drawing a Circle with radius {}", self.radius)
    }
}

impl Drawable for Rectangle {
    fn draw(&self) {
        debug::println("Drawing a Rectangle with width:{} height:{}", 
            self.width,
            self.height
        )
    }
}

fn render(objects: []&dyn Drawable) {
    for obj in objects {
        obj.>draw()
    }
}

fn main() {
    let circle: Circle = (0.4,)
    let rectangle: Rectangle = (1.0, 1.0)
    let shapes: []&dyn Drawable = [](
        &dyn circle,
        &dyn rectangle
    )
    render(shapes)
}