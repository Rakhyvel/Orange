import std::debug
import std::ffi
import std::testing
import std::mem
import externs

fn main() -> () {
    debug::println("Hello, World!")
    externs::println("Hello, World f!")
}

fn make_int_ptr() -> &mut Int with core::Allocating {
    let res = mem::new[Int](core::Allocating.alloc) catch unreachable
    res^ = 1024
    res
}

test "allocator works" {
    let mut alloc = mem::Heap_Allocator()
    let res = try mem::new[Int](&mut alloc)
    res^ = 1024

    try testing::expect(res^ == 1024)

    .ok
}

test "test of tests" {
    let x = 5
    let y = 4

    try testing::expect(y + 1 == x)

    .ok
}

test "test that tests work" {
    let x = 6
    let y = 5

    try testing::expect(y + 1 == x)

    .ok
}
