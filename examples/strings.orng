fn main(sys: System) -> !() {
    // Basic string declaration
    let greeting = "Hello, Orng! 🍊"
    print_string_details(sys, greeting)

    // Multiline string with indentation preservation
    let multiline = \\This is a 
    \\  multiline
    \\    string
    \\      with preserved
    \\        indentation!
    \\
    
    debug::println("Multiline string:")
    debug::println("{s}", multiline)

    // Special character escapes
    let escaped = "\n\r\t\'\"\\🍊"
    debug::println("Escaped characters:")
    print_string_details(sys, escaped)

    // Hex byte representation
    let hex_string = "\x5B\x22\x23"  // [", #
    debug::println("Hex string:")
    print_string_details(sys, hex_string)

    // String indexing
    let sample = "NOW YUO CEE..."
    debug::println("Indexing: {c}", sample[5])
}

fn print_string_details(s: String) -> !() {
    debug::println("String: \"{s}\"", s)
    debug::println("Length: {}", s.length)
    
    // Byte-level access
    debug::print("Bytes: ")
    while let mut i = 0; i < s.length; i += 1 {
        debug::print("{} ", s[i])
    }
    debug::println("")
}
