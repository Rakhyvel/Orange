struct Heap_Allocator {}
impl core::Allocator for Heap_Allocator {
    virtual fn alloc(&mut self, nbytes: Int) -> ?[*mut]Byte {
        _ = self
        extern const malloc: Int -> [*mut]Byte
        .some(malloc(nbytes))
    }

    virtual fn free(&mut self, allocation: [*]Byte) -> () {
        _ = self
        extern("free") const c_free: [*]Byte -> ()
        c_free(allocation)
    }

    virtual fn resize(&mut self, allocation: [*mut]Byte, newsize: Int) -> ?[*mut]Byte {
        _ = (self, allocation, newsize)
        unreachable
    }
}